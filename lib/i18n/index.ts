export const translations = {
  en: {
    // Header
    appName: "PRism AI",
    searchPlaceholder: "Search all pull requests...",
    logout: "Logout",
    
    // Sidebar
    dashboard: "Dashboard",
    reviewHistory: "Review History",
    analytics: "Analytics",
    settings: "Settings",
    repositories: "REPOSITORIES",
    filterRepos: "Filter repos...",
    
    // Dashboard
    pullRequests: "Pull Requests",
    openPullRequests: "Open Pull Requests",
    closedPullRequests: "Closed Pull Requests",
    allPullRequests: "All Pull Requests",
    noPullRequests: "No pull requests found",
    open: "Open",
    closed: "Closed",
    all: "All",
    reviewCode: "Review Code",
    viewDetails: "View Details",
    reviewSelected: "Review Selected",
    needsReview: "Needs Review",
    wip: "WIP",
    aiReviewed: "AI Reviewed",
    allClear: "All Clear!",
    noOpenPRs: "No open pull requests in this repository.",
    filesChanged: "files changed",
    opened: "Opened",
    reviews: "Reviews",
    review: "Review",
    viewReviewHistory: "View review history",
    reviewHistoryModal: "Review History",
    noReviewsFound: "No reviews found for this PR.",
    loadingReviews: "Loading reviews...",
    reviewType: "Review Type",
    
    // Analytics
    analyticsTitle: "AI Performance Analytics",
    analyticsDescription: "Review statistics and performance trends.",
    totalReviews: "Total Reviews",
    criticalIssuesFound: "Critical Issues Found",
    aiUsageRate: "AI Usage Rate",
    performanceTrends: "Performance Trends",
    aiEfficiencyOverTime: "AI efficiency over time",
    reviewTypeUsage: "Review Type Usage",
    distributionOfReviews: "Distribution of AI review types",
    weekly: "Weekly",
    monthly: "Monthly",
    selectDateRange: "Select Date Range",
    thisWeek: "this week",
    startDate: "Start Date",
    endDate: "End Date",
    apply: "Apply",
    
    // Settings
    settingsTitle: "Settings",
    settingsDescription: "Manage your preferences and configuration",
    general: "General",
    apiKeys: "API Keys",
    reviewConfiguration: "Review Configuration",
    languagePreferences: "Language Preferences",
    interfaceLanguage: "Interface Language",
    chooseLanguage: "Choose your preferred language for the interface",
    claudeApiKey: "Claude API Key",
    claudeApiKeyDescription: "Add your Claude API key to enable AI code reviews. Get your API key from",
    anthropicConsole: "Anthropic Console",
    apiKey: "API Key",
    configured: "Configured",
    apiKeySecure: "Your API key is stored securely and never exposed to the client",
    noteForOpenSource: "Note for Open Source Users",
    noteDescription: "This application requires a Claude API key to function. You can get a free API key with usage limits from Anthropic. The key is only used for code reviews and is stored in your database.",
    customReviewPrompts: "Custom Review Prompts",
    customPromptsDescription: "Customize the AI prompts for each review type to match your team's needs",
    backendReviewPrompt: "Backend Review Prompt",
    frontendReviewPrompt: "Frontend Review Prompt",
    mobileReviewPrompt: "Mobile Review Prompt",
    enterBackendPrompt: "Enter backend review prompt...",
    enterFrontendPrompt: "Enter frontend review prompt...",
    enterMobilePrompt: "Enter mobile review prompt...",
    saveChanges: "Save Changes",
    saving: "Saving...",
    savedSuccessfully: "Settings saved successfully!",
    failedToSave: "Failed to save settings",
    loadingSettings: "Loading settings...",
    supabaseConfig: "Supabase Configuration",
    supabaseConfigDescription: "Configure your own Supabase instance to use locally. Get your credentials from",
    supabaseUrl: "Supabase URL",
    supabaseAnonKey: "Supabase Anon Key",
    supabaseServiceKey: "Supabase Service Role Key",
    serviceKeyWarning: "⚠️ Keep this key secure. It has admin access to your database.",
    
    // Review History
    reviewHistoryTitle: "Review History",
    reviewHistoryDescription: "View all your previous code reviews",
    allAIReviews: "All your AI review history",
    totalReviewsCount: "total reviews",
    filterBy: "Filter by:",
    submitted: "Submitted to GitHub",
    notSubmitted: "Not Submitted",
    allTypes: "All Types",
    results: "results",
    noReviewsYet: "No Reviews Yet",
    noReviewsMatchingFilters: "No reviews matching filters found.",
    totalIssues: "total issues",
    submittedToGitHub: "Submitted to GitHub",
    completedAgo: "completed",
    noReviews: "No reviews found",
    status: "Status",
    pending: "Pending",
    processing: "Processing",
    completed: "Completed",
    failed: "Failed",
    critical: "Critical",
    suggestions: "Suggestions",
    bestPractices: "Best Practices",
    
    // Review Types
    backend: "Backend",
    frontend: "Frontend",
    mobile: "Mobile",
    
    // Common
    loading: "Loading...",
    error: "Error",
    success: "Success",
    cancel: "Cancel",
    confirm: "Confirm",
    english: "English",
    turkish: "Türkçe",
  },
  tr: {
    // Header
    appName: "PRism AI",
    searchPlaceholder: "Tüm pull request'leri ara...",
    logout: "Çıkış Yap",
    
    // Sidebar
    dashboard: "Kontrol Paneli",
    reviewHistory: "İnceleme Geçmişi",
    analytics: "Analitik",
    settings: "Ayarlar",
    repositories: "DEPOLAR",
    filterRepos: "Depoları filtrele...",
    
    // Dashboard
    pullRequests: "Pull Request'ler",
    openPullRequests: "Açık Pull Request'ler",
    closedPullRequests: "Kapalı Pull Request'ler",
    allPullRequests: "Tüm Pull Request'ler",
    noPullRequests: "Pull request bulunamadı",
    open: "Açık",
    closed: "Kapalı",
    all: "Tümü",
    reviewCode: "Kodu İncele",
    viewDetails: "Detayları Gör",
    reviewSelected: "Seçilenleri İncele",
    needsReview: "İnceleme Gerekiyor",
    wip: "Devam Ediyor",
    aiReviewed: "AI İncelendi",
    allClear: "Hepsi Tamam!",
    noOpenPRs: "Bu depoda açık pull request yok.",
    filesChanged: "dosya değişti",
    opened: "Açıldı",
    reviews: "İnceleme",
    review: "İnceleme",
    viewReviewHistory: "İnceleme geçmişini görüntüle",
    reviewHistoryModal: "İnceleme Geçmişi",
    noReviewsFound: "Bu PR için inceleme bulunamadı.",
    loadingReviews: "İncelemeler yükleniyor...",
    reviewType: "İnceleme Tipi",
    
    // Analytics
    analyticsTitle: "AI Performans Analitikleri",
    analyticsDescription: "İnceleme istatistikleri ve performans trendleri.",
    totalReviews: "Toplam İnceleme",
    criticalIssuesFound: "Bulunan Kritik Sorunlar",
    aiUsageRate: "AI Kullanım Oranı",
    performanceTrends: "Performans Trendleri",
    aiEfficiencyOverTime: "Zaman içinde AI verimliliği",
    reviewTypeUsage: "İnceleme Tipi Kullanımı",
    distributionOfReviews: "AI inceleme tiplerinin dağılımı",
    weekly: "Haftalık",
    monthly: "Aylık",
    selectDateRange: "Tarih Aralığı Seç",
    thisWeek: "bu hafta",
    startDate: "Başlangıç Tarihi",
    endDate: "Bitiş Tarihi",
    apply: "Uygula",
    
    // Settings
    settingsTitle: "Ayarlar",
    settingsDescription: "Tercihlerinizi ve yapılandırmanızı yönetin",
    general: "Genel",
    apiKeys: "API Anahtarları",
    reviewConfiguration: "İnceleme Yapılandırması",
    languagePreferences: "Dil Tercihleri",
    interfaceLanguage: "Arayüz Dili",
    chooseLanguage: "Arayüz için tercih ettiğiniz dili seçin",
    claudeApiKey: "Claude API Anahtarı",
    claudeApiKeyDescription: "AI kod incelemeleri için Claude API anahtarınızı ekleyin. API anahtarınızı şuradan alabilirsiniz:",
    anthropicConsole: "Anthropic Console",
    apiKey: "API Anahtarı",
    configured: "Yapılandırıldı",
    apiKeySecure: "API anahtarınız güvenli bir şekilde saklanır ve asla istemciye gösterilmez",
    noteForOpenSource: "Açık Kaynak Kullanıcıları için Not",
    noteDescription: "Bu uygulama çalışmak için bir Claude API anahtarı gerektirir. Anthropic'ten kullanım limitleri olan ücretsiz bir API anahtarı alabilirsiniz. Anahtar yalnızca kod incelemeleri için kullanılır ve veritabanınızda saklanır.",
    customReviewPrompts: "Özel İnceleme İstemleri",
    customPromptsDescription: "Her inceleme türü için AI istemlerini ekibinizin ihtiyaçlarına göre özelleştirin",
    backendReviewPrompt: "Backend İnceleme İstemi",
    frontendReviewPrompt: "Frontend İnceleme İstemi",
    mobileReviewPrompt: "Mobil İnceleme İstemi",
    enterBackendPrompt: "Backend inceleme istemi girin...",
    enterFrontendPrompt: "Frontend inceleme istemi girin...",
    enterMobilePrompt: "Mobil inceleme istemi girin...",
    saveChanges: "Değişiklikleri Kaydet",
    saving: "Kaydediliyor...",
    savedSuccessfully: "Ayarlar başarıyla kaydedildi!",
    failedToSave: "Ayarlar kaydedilemedi",
    loadingSettings: "Ayarlar yükleniyor...",
    supabaseConfig: "Supabase Yapılandırması",
    supabaseConfigDescription: "Kendi Supabase örneğinizi yerel olarak kullanmak için yapılandırın. Kimlik bilgilerinizi şuradan alabilirsiniz:",
    supabaseUrl: "Supabase URL",
    supabaseAnonKey: "Supabase Anon Anahtarı",
    supabaseServiceKey: "Supabase Service Role Anahtarı",
    serviceKeyWarning: "⚠️ Bu anahtarı güvende tutun. Veritabanınıza admin erişimi sağlar.",
    
    // Review History
    reviewHistoryTitle: "İnceleme Geçmişi",
    reviewHistoryDescription: "Tüm önceki kod incelemelerinizi görüntüleyin",
    allAIReviews: "Tüm AI review geçmişiniz",
    totalReviewsCount: "toplam review",
    filterBy: "Filtrele:",
    submitted: "GitHub'a Gönderildi",
    notSubmitted: "Gönderilmedi",
    allTypes: "Tüm Tipler",
    results: "sonuç",
    noReviewsYet: "Henüz Review Yok",
    noReviewsMatchingFilters: "Filtrelere uyan review bulunamadı.",
    totalIssues: "toplam issue",
    submittedToGitHub: "GitHub'a Gönderildi",
    completedAgo: "tamamlandı",
    noReviews: "İnceleme bulunamadı",
    status: "Durum",
    pending: "Bekliyor",
    processing: "İşleniyor",
    completed: "Tamamlandı",
    failed: "Başarısız",
    critical: "Kritik",
    suggestions: "Öneriler",
    bestPractices: "En İyi Uygulamalar",
    
    // Review Types
    backend: "Backend",
    frontend: "Frontend",
    mobile: "Mobil",
    
    // Common
    loading: "Yükleniyor...",
    error: "Hata",
    success: "Başarılı",
    cancel: "İptal",
    confirm: "Onayla",
    english: "English",
    turkish: "Türkçe",
  }
} as const;

export type Language = keyof typeof translations;
export type TranslationKey = keyof typeof translations.en;

export function getTranslation(lang: Language, key: TranslationKey): string {
  return translations[lang][key];
}

export function useTranslations(lang: Language) {
  return translations[lang];
}
